---
import { type CollectionEntry, getCollection } from "astro:content";

import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Layout from "@layouts/Layout.astro";
// import Main from "@layouts/Main.astro";
import Tag from "@components/Tag.astro";
// import getUniqueTags from "@utils/getUniqueTags";
// import { SITE } from "@config";

const posts = await getCollection("blog");


interface Tag {
  tag: string;
  tagName: string;
}

const getUniqueTags = (posts: CollectionEntry<"blog">[]) => {
  const tags: Tag[] = posts
    // .filter(postFilter)
    .flatMap(post => post.data.tags)
    // .map(tag => ({ tag: slugifyStr(tag), tagName: tag }))
    .map(tag => ({ tag: tag, tagName: tag }))
    .filter(
      (value, index, self) =>
        self.findIndex(tag => tag.tag === value.tag) === index
    )
    .sort((tagA, tagB) => tagA.tag.localeCompare(tagB.tag));
  return tags;
};

let tags = getUniqueTags(posts);
---

<Layout title={`Tags`}>
  <Header activeNav="tags" />
  <!-- <Main pageTitle="Tags" pageDesc="All the tags used in posts."> -->
  <main class="pt-10">
    <div class="content">
      <h2 class="remark">Tags</h2>
      <ul>
        {tags.map(({ tag }) => <Tag {tag} size="lg" />)}
      </ul>
    </div>
  </main>
  <!-- </Main> -->
  <Footer />
</Layout>
